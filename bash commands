#! -> bangs (Used for define bash path to run the shell script)

read -> take input from console
    -s : (silence) enter hidden character like password
    -p : prompt will be in same line

echo -> used to print the data on the console

if statement syntax--

if [condition]
then
    statements
elif
    statements
else
    statements
fi 

Types of file--
        block special                                           character special
1. video, audio, binary, etc.                        1. simple text file which only have characters
2. -b                                                2. -c

cat > filename : to overwrite the file
cat >> filename : append at the end of file

Using && and || operator:

[ expression-1 ] && [ expression-2 ] ==  [ expression-1 -a expression-2 ] ==  [[ expression-1 && expression-2 ]]
[ expression-1 ] || [ expression-2 ] ==  [ expression-1 -o expression-2 ] ==  [[ expression-1 || expression-2 ]]

Arithmetic Operation:

echo "$(( a + b ))" 
echo "$(( a - b ))"
echo "$(( a * b ))"
echo "$(( a / b ))"

echo $(expr $a + $b )
echo $(( a + b ))
echo $(expr $a \* $b )

CASE Statement:

case expression in
    pattern1 )
        statements ;;
    pattern2 )
        statements ;;
    *
        statements ;;
    ..
esac


while loop:

while [ condition ] 
do
    statement;
    statement;
    statement;
done

if [ -z $variable ] # used to check variable is empty or not (return true if empty otherwise false)

until loop:

until [ condition ] # it will execute the statements until condition is false
do
    statement;
    statement;
    statement;
done


FOR loop:

for variable in 1 2 4 5..... N
do 
    statement;
    statement;
    statement;
done

for variable in file1 file2 file3
do 
    statement;
    statement;
    statement;
done

for variable in $(linux-or-unix-command-here)
do 
    statement;
    statement;
    statement;
done

for (( exp1; exp2; exp3 ))
do 
    statement;
    statement;
    statement;
done


select statement:

select name in list
do 
    command
    command
    command
done

function :

function fun_name() { 
    commands
}

Or 

fun_name() {
    commands
}

fun_name() {
    return return_value
}

According to given we need to return the value

fun_name() {
    [ condition ] && return 0 || return 1
}
